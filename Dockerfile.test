
# 1st stage, build the app
FROM ghcr.io/graalvm/graalvm-ce:ol9-java17-22.3.0 as build

# Install native-image
RUN gu install native-image

WORKDIR /usr/share

# Install maven
RUN set -x && \
    curl -O https://archive.apache.org/dist/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.tar.gz && \
    tar -xvf apache-maven-*-bin.tar.gz  && \
    rm apache-maven-*-bin.tar.gz && \
    mv apache-maven-* maven && \
    ln -s /usr/share/maven/bin/mvn /bin/

WORKDIR /helidon

# Create a first layer to cache the "Maven World" in the local repository.
# Incremental docker builds will always resume after that, unless you update
# the pom
ADD helidon-se.pom.xml pom.xml
ADD policy policy
ADD service-bus service-bus
ADD user-store user-store
RUN mvn clean install
#RUN mvn install -Pnative-image -Dnative.image.skip -Dmaven.test.skip -Declipselink.weave.skip

# Do the Maven build!
# Incremental docker builds will resume here when you change sources
#ADD src src
ADD helidon-se helidon-se
WORKDIR /helidon/helidon-se
#RUN mvn clean package -Pnative-image -Dnative.image.buildStatic -DskipTests
RUN mvn package -DskipTests

RUN echo "done!"

# 2nd stage, build the runtime image

#FROM scratch
FROM ghcr.io/graalvm/graalvm-ce:ol9-java17-22.3.0
WORKDIR /helidon

# Copy the binary built in the 1st stage
COPY --from=build /helidon/helidon-se/target/helidon-quickstart-se.jar ./
COPY --from=build /helidon/helidon-se/target/libs ./libs

CMD ["java", "-jar", "helidon-quickstart-se.jar"]

EXPOSE 8080
