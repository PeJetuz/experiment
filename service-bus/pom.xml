<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2023 Vladimir Shapkin

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met: 1) Redistributions of source code must retain the above
copyright notice, this list of conditions and the following
disclaimer. 2) Redistributions in binary form must reproduce the above
copyright notice, this list of conditions and the following
disclaimer in the documentation and/or other materials provided
with the distribution. 3) Neither the name of the Qulice.com nor
the names of its contributors may be used to endorse or promote
products derived from this software without specific prior written
permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>my.test</groupId>
        <artifactId>parent-pom</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>my.test</groupId>
    <artifactId>service-bus</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>service-bus</name>
    <description>Demo project service bus</description>

    <properties>
        <testcontainers.version>1.19.7</testcontainers.version>
        <kafka.image>bitnami/kafka:3.6.1</kafka.image>
        <kafka.name>kafka</kafka.name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>my.test</groupId>
            <artifactId>policy</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>3.6.1</version>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>1.0</minimum>
                                        </limit>
                                        <limit>
                                            <counter>CLASS</counter>
                                            <value>MISSEDCOUNT</value>
                                            <maximum>0</maximum>
                                        </limit>
                                        <limit>
                                            <counter>METHOD</counter>
                                            <value>MISSEDCOUNT</value>
                                            <maximum>0</maximum>
                                        </limit>
                                        <limit>
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>1.0</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>1.0</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>integrotest</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.44.0</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>${kafka.name}</alias>
                                    <name>${kafka.image}</name>
                                    <run>
                                        <hostname>${kafka.name}</hostname>
                                        <env>
                                            <KAFKA_CFG_NODE_ID>0</KAFKA_CFG_NODE_ID>
                                            <KAFKA_CFG_PROCESS_ROLES>controller,broker</KAFKA_CFG_PROCESS_ROLES>
                                            <KAFKA_CFG_LISTENERS>PLAINTEXT://:9092,CONTROLLER://0.0.0.0:9093,EXTERNAL://0.0.0.0:9094</KAFKA_CFG_LISTENERS>
                                            <KAFKA_CFG_ADVERTISED_LISTENERS>PLAINTEXT://${kafka.name}:9092,EXTERNAL://localhost:9094</KAFKA_CFG_ADVERTISED_LISTENERS>
                                            <KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP>CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT</KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP>
                                            <KAFKA_CFG_CONTROLLER_QUORUM_VOTERS>0@${kafka.name}:9093</KAFKA_CFG_CONTROLLER_QUORUM_VOTERS>
                                            <KAFKA_CFG_CONTROLLER_LISTENER_NAMES>CONTROLLER</KAFKA_CFG_CONTROLLER_LISTENER_NAMES>
                                        </env>
                                        <ports>
                                            <port>9094:9094</port>
                                        </ports>
                                    </run>
                                </image>
                                <!-- work -->
                                <!--                        <image>-->
                                <!--                            <alias>kafka</alias>-->
                                <!--                            <name>${kafka.image}</name>-->
                                <!--                            <run>-->
                                <!--                                <hostname>kafka</hostname>-->
                                <!--                                <envPropertyFile>it/bitnami-kafka-server.env</envPropertyFile>-->
                                <!--                                &lt;!&ndash; Local development port.-->
                                <!--                                     Add the local address of the developer's computer to the bitnami-kafka-server.env&ndash;&gt;-->
                                <!--                                <ports>-->
                                <!--                                    <port>29094:29094</port>-->
                                <!--                                </ports>-->
                                <!--                            </run>-->
                                <!--                        </image>-->
                                <!--                        <image>-->
                                <!--                            <alias>integration-test</alias>-->
                                <!--                            <name>%g/integration-test</name>-->
                                <!--                            <build>-->
                                <!--                                <contextDir>${project.basedir}/it</contextDir>-->
                                <!--                                <dockerFile>Dockerfile</dockerFile>-->
                                <!--                            </build>-->
                                <!--                            <run>-->
                                <!--                                <hostname>integration-test</hostname>-->
                                <!--                                <env>-->
                                <!--                                    <BOOTSTRAP_SERVERS>kafka:9094</BOOTSTRAP_SERVERS>-->
                                <!--                                </env>-->
                                <!--                                <dependsOn>-->
                                <!--                                    <container>kafka</container>-->
                                <!--                                </dependsOn>-->
                                <!--                                <links>-->
                                <!--                                    <link>kafka</link>-->
                                <!--                                </links>-->
                                <!--                            </run>-->
                                <!--                        </image>-->
                                <!-- work end -->


                                <!--                        <image>-->
                                <!--                            <alias>kafka</alias>-->
                                <!--                            <name>${kafka.image}</name>-->
                                <!--                            <build>-->
                                <!--                                <user>1001</user>-->
                                <!--                                <healthCheck>-->
                                <!--                                    <cmd><![CDATA[ kafka-topics.sh &#45;&#45;bootstrap-server localhost:9092 &#45;&#45;topic hc &#45;&#45;create &#45;&#45;if-not-exists && kafka-topics.sh &#45;&#45;bootstrap-server localhost:9092 &#45;&#45;topic hc &#45;&#45;describe ]]></cmd>-->
                                <!--                                    <interval>10s</interval>-->
                                <!--                                    <timeout>20s</timeout>-->
                                <!--                                    <retries>5</retries>-->
                                <!--                                    <startPeriod>10s</startPeriod>-->
                                <!--                                </healthCheck>-->
                                <!--                            </build>-->
                                <!--                            <run>-->
                                <!--                                <hostname>kafka</hostname>-->
                                <!--                                <envPropertyFile>it/bitnami-kafka-server.env</envPropertyFile>-->
                                <!--                                <entrypoint>-->
                                <!--                                    <shell>/opt/bitnami/scripts/kafka/run.sh</shell>-->
                                <!--                                </entrypoint>-->
                                <!--                                <ports>-->
                                <!--                                    &lt;!&ndash; Port mappings: Container internal port (which must be exposed) will be-->
                                <!--                                   dynamically mapped and this (random) port will be assigned to the maven variable-->
                                <!--                                   ${tomcat.port}. Multiple port mapping can be specified here&ndash;&gt;-->
                                <!--                                    <port>9092:9092</port>-->
                                <!--                                    <port>9094:9094</port>-->
                                <!--                                </ports>-->
                                <!--&lt;!&ndash;                                <wait>&ndash;&gt;-->
                                <!--&lt;!&ndash;                                    <healthy>true</healthy>&ndash;&gt;-->
                                <!--&lt;!&ndash;                                    &lt;!&ndash; ... but at max 10 seconds &ndash;&gt;&ndash;&gt;-->
                                <!--&lt;!&ndash;                                    <time>10000</time>&ndash;&gt;-->
                                <!--&lt;!&ndash;                                </wait>&ndash;&gt;-->
                                <!--                            </run>-->
                                <!--                        </image>-->
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <!-- "build" should be used to create the images with the
                                         artifact -->
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>qulice</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.qulice</groupId>
                        <artifactId>qulice-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludes combine.children="append">
                                <exclude>checkstyle:/src/test/.*/KafkaTest.*</exclude>
                                <exclude>pmd:/src/test/.*/KafkaTest.*</exclude>
                                <exclude>checkstyle:\\src\\test\\.*\\KafkaTest.*</exclude>
                                <exclude>pmd:\\src\\test\\.*\\KafkaTest.*</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-versions</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <!-- https://maven.apache.org/enforcer/enforcer-rules/index.html -->
                                    <rules>
                                        <banDuplicatePomDependencyVersions />
                                        <bannedDependencies />
                                        <reactorModuleConvergence />
                                        <dependencyConvergence />
                                        <requireMavenVersion>
                                            <version>3.8.6</version>
                                        </requireMavenVersion>
                                        <requireJavaVersion>
                                            <version>21</version>
                                        </requireJavaVersion>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.basepom.maven</groupId>
                        <artifactId>duplicate-finder-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <printEqualFiles>true</printEqualFiles>
                                    <failBuildInCaseOfDifferentContentConflict>false</failBuildInCaseOfDifferentContentConflict>
                                    <failBuildInCaseOfEqualContentConflict>true</failBuildInCaseOfEqualContentConflict>
                                    <failBuildInCaseOfConflict>false</failBuildInCaseOfConflict>
                                    <checkCompileClasspath>true</checkCompileClasspath>
                                    <checkRuntimeClasspath>true</checkRuntimeClasspath>
                                    <checkTestClasspath>true</checkTestClasspath>
                                    <skip>false</skip>
                                    <preferLocal>true</preferLocal>
                                    <useResultFile>true</useResultFile>
                                    <resultFileMinClasspathCount>2</resultFileMinClasspathCount>
                                    <resultFile>${project.build.directory}/duplicate-finder-result.xml</resultFile>
                                    <ignoredResourcePatterns>
                                        <ignoredResourcePattern>draftv3/schema</ignoredResourcePattern>
                                    </ignoredResourcePatterns>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <configuration>
                            <effort>Max</effort>
                            <threshold>Low</threshold>
                            <plugins>
                                <plugin>
                                    <groupId>com.h3xstream.findsecbugs</groupId>
                                    <artifactId>findsecbugs-plugin</artifactId>
                                    <version>1.12.0</version>
                                </plugin>
                            </plugins>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
