<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2023 Vladimir Shapkin

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met: 1) Redistributions of source code must retain the above
copyright notice, this list of conditions and the following
disclaimer. 2) Redistributions in binary form must reproduce the above
copyright notice, this list of conditions and the following
disclaimer in the documentation and/or other materials provided
with the distribution. 3) Neither the name of the Qulice.com nor
the names of its contributors may be used to endorse or promote
products derived from this software without specific prior written
permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>my.test</groupId>
        <artifactId>parent-pom</artifactId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>my.test</groupId>
    <artifactId>service-bus</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>service-bus</name>
    <description>Demo project service bus</description>

    <properties>
        <testcontainers.version>1.19.7</testcontainers.version>
        <kafka.image>bitnami/kafka:3.9.0</kafka.image>
        <kafka.name>kafka</kafka.name>
        <kafka.version>3.9.0</kafka.version>
        <pulsar.image>apachepulsar/pulsar:4.0.2</pulsar.image>
        <pulsar.name>pulsar</pulsar.name>
        <pulsar.version>4.0.2</pulsar.version>
        <schema-registry.image>bitnami/schema-registry:7.8.0</schema-registry.image>
        <schema-registry.name>schema-registry</schema-registry.name>
        <version.lib.google-protobuf>3.25.5</version.lib.google-protobuf>
        <version.lib.grpc>1.70.0</version.lib.grpc>
        <version.plugin.os>1.7.1</version.plugin.os>
        <version.kafka.protobuf.serializer>7.8.0</version.kafka.protobuf.serializer>
    </properties>

    <dependencies>
        <dependency>
            <groupId>my.test</groupId>
            <artifactId>policy</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.google.code.findbugs</groupId>
                    <artifactId>annotations</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-protobuf-serializer</artifactId>
            <version>${version.kafka.protobuf.serializer}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${version.lib.google-protobuf}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.pulsar</groupId>
            <artifactId>pulsar-client-admin</artifactId>
            <version>${pulsar.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.activation</groupId>
                    <artifactId>javax.activation</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.avro</groupId>
                    <artifactId>avro</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-java</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.pulsar</groupId>
                    <artifactId>pulsar-client-admin-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.pulsar</groupId>
                    <artifactId>pulsar-client-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.pulsar</groupId>
            <artifactId>pulsar-client-admin-api</artifactId>
            <version>${pulsar.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.pulsar</groupId>
            <artifactId>pulsar-client-api</artifactId>
            <version>${pulsar.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jcabi</groupId>
            <artifactId>jcabi-matchers</artifactId>
            <version>1.8.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${version.plugin.os}</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <protocArtifact>
                        com.google.protobuf:protoc:${version.lib.google-protobuf}:exe:${os.detected.classifier}
                    </protocArtifact>
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>
                        io.grpc:protoc-gen-grpc-java:${version.lib.grpc}:exe:${os.detected.classifier}
                    </pluginArtifact>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>1.0</minimum>
                                        </limit>
                                        <limit>
                                            <counter>CLASS</counter>
                                            <value>MISSEDCOUNT</value>
                                            <maximum>0</maximum>
                                        </limit>
                                        <limit>
                                            <counter>METHOD</counter>
                                            <value>MISSEDCOUNT</value>
                                            <maximum>0</maximum>
                                        </limit>
                                        <limit>
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>1.0</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>1.0</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>integrotest</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.44.0</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>${kafka.name}</alias>
                                    <name>${kafka.image}</name>
                                    <run>
                                        <hostname>${kafka.name}</hostname>
                                        <env>
                                            <KAFKA_CFG_NODE_ID>0</KAFKA_CFG_NODE_ID>
                                            <KAFKA_CFG_PROCESS_ROLES>controller,broker</KAFKA_CFG_PROCESS_ROLES>
                                            <KAFKA_CFG_LISTENERS>PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094</KAFKA_CFG_LISTENERS>
                                            <KAFKA_CFG_ADVERTISED_LISTENERS>PLAINTEXT://${kafka.name}:9092,EXTERNAL://localhost:9094</KAFKA_CFG_ADVERTISED_LISTENERS>
                                            <KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP>CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT</KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP>
                                            <KAFKA_CFG_CONTROLLER_QUORUM_VOTERS>0@${kafka.name}:9093</KAFKA_CFG_CONTROLLER_QUORUM_VOTERS>
                                            <KAFKA_CFG_CONTROLLER_LISTENER_NAMES>CONTROLLER</KAFKA_CFG_CONTROLLER_LISTENER_NAMES>
                                        </env>
                                        <ports>
                                            <port>9094:9094</port>
                                        </ports>
                                    </run>
                                </image>
                                <image>
                                    <alias>${schema-registry.name}</alias>
                                    <name>${schema-registry.image}</name>
                                    <run>
                                        <hostname>${schema-registry.name}</hostname>
                                        <env>
                                            <SCHEMA_REGISTRY_KAFKA_BROKERS>PLAINTEXT://${kafka.name}:9092</SCHEMA_REGISTRY_KAFKA_BROKERS>
                                            <SCHEMA_REGISTRY_LISTENERS>http://0.0.0.0:8081</SCHEMA_REGISTRY_LISTENERS>
                                            <SCHEMA_REGISTRY_DEBUG>true</SCHEMA_REGISTRY_DEBUG>
                                        </env>
                                        <ports>
                                            <port>8081:8081</port>
                                        </ports>
                                        <links>
                                            <link>${kafka.name}</link>
                                        </links>
                                        <wait>
                                            <http>
                                                <url>http://localhost:8081/v1/metadata/id</url>
                                            </http>
                                            <time>100000</time>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <alias>${pulsar.name}</alias>
                                    <name>${pulsar.image}</name>
                                    <run>
                                        <hostname>${pulsar.name}</hostname>
                                        <ports>
                                            <port>6650:6650</port>
                                            <port>8585:8080</port>
                                        </ports>
                                        <volumes>
                                            <bind>
                                                <volume>/pulsar/data</volume>
                                                <volume>/pulsar/conf</volume>
                                            </bind>
                                        </volumes>
                                        <cmd>
                                            <shell>bin/pulsar standalone</shell>
                                        </cmd>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <!-- "build" should be used to create the images with the
                                         artifact -->
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>qulice</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.qulice</groupId>
                        <artifactId>qulice-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludes combine.children="append">
                                <exclude>checkstyle:/src/test/.*/KafkaTest.*</exclude>
                                <exclude>pmd:/src/test/.*/KafkaTest.*</exclude>
                                <exclude>checkstyle:\\src\\test\\.*\\KafkaTest.*</exclude>
                                <exclude>pmd:\\src\\test\\.*\\KafkaTest.*</exclude>
                                <exclude>duplicatefinder:.*</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-versions</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <!-- https://maven.apache.org/enforcer/enforcer-rules/index.html -->
                                    <rules>
                                        <banDuplicatePomDependencyVersions />
                                        <bannedDependencies />
                                        <reactorModuleConvergence />
                                        <dependencyConvergence />
                                        <requireMavenVersion>
                                            <version>3.8.6</version>
                                        </requireMavenVersion>
                                        <requireJavaVersion>
                                            <version>21</version>
                                        </requireJavaVersion>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.basepom.maven</groupId>
                        <artifactId>duplicate-finder-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <printEqualFiles>true</printEqualFiles>
                                    <failBuildInCaseOfDifferentContentConflict>false</failBuildInCaseOfDifferentContentConflict>
                                    <failBuildInCaseOfEqualContentConflict>true</failBuildInCaseOfEqualContentConflict>
                                    <failBuildInCaseOfConflict>false</failBuildInCaseOfConflict>
                                    <checkCompileClasspath>true</checkCompileClasspath>
                                    <checkRuntimeClasspath>true</checkRuntimeClasspath>
                                    <checkTestClasspath>true</checkTestClasspath>
                                    <skip>false</skip>
                                    <preferLocal>true</preferLocal>
                                    <useResultFile>true</useResultFile>
                                    <resultFileMinClasspathCount>2</resultFileMinClasspathCount>
                                    <resultFile>${project.build.directory}/duplicate-finder-result.xml</resultFile>
                                    <ignoredResourcePatterns>
                                        <ignoredResourcePattern>findbugsExclude.xml</ignoredResourcePattern>
                                        <ignoredResourcePattern>^(google[/.]protobuf).*</ignoredResourcePattern>
                                    </ignoredResourcePatterns>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <configuration>
                            <effort>Max</effort>
                            <threshold>Low</threshold>
                            <plugins>
                                <plugin>
                                    <groupId>com.h3xstream.findsecbugs</groupId>
                                    <artifactId>findsecbugs-plugin</artifactId>
                                    <version>1.12.0</version>
                                </plugin>
                            </plugins>
                        </configuration>
                        <executions>
                            <execution>
                                <id>default</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <repositories>
        <repository>
            <id>confluent</id>
            <name>confluent</name>
            <url>https://packages.confluent.io/maven</url>
        </repository>
    </repositories>
</project>
